server.port=8080

spring.main.allow-bean-definition-overriding = true

mybatis.configuration.map-underscore-to-camel-case = true

#数据源
spring.shardingsphere.datasource.names = m1

#数据源1
spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url = jdbc:mysql://localhost:3306/shardingdemo?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = 12345678


spring.shardingsphere.sharding.default-data-source-name=m1


#数据源2
#spring.shardingsphere.datasource.m2.type = com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.m2.driver-class-name = com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.m2.url = jdbc:mysql://localhost:3306/boot2?useUnicode=true
#spring.shardingsphere.datasource.m2.username = root
#spring.shardingsphere.datasource.m2.password = root

# 分库策略，以sex为分片键，分片策略为sex % 2 + 1，sex为偶数操作m1数据源，否则操作m2。
#spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column = sex
#spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression = m$->{sex % 2 + 1}

# 指定user表的数据分布情况
spring.shardingsphere.sharding.tables.user.actual-data-nodes = m1.user_$->{0..2}

# 指定user表的主键生成策略为SNOWFLAKE
#spring.shardingsphere.sharding.tables.user.key-generator.column=user_id
#spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE

# 指定user表的分片策略，分片策略包括分片键和分片算法
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column = id
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression = user_$->{id % 3}
spring.shardingsphere.sharding.tables.user.table-strategy.standard.sharding-column=id
spring.shardingsphere.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name=com.manji.shardingdemo.consistencehasg.ConsistenceHashAlgorithm


# 打开sql输出日志
spring.shardingsphere.props.sql.show = true

logging.level.root = info
logging.level.org.springframework.web = debug
logging.level.com.itheima.dbsharding  = info
logging.level.druid.sql = debug

#mybatis
mybatis.type-aliases-package=com.manji.shardingdemo.entity
mybatis.mapper-locations=classpath:mapper/*Mapper.xml